# Kubernetes Cheat Sheet - By Kunal Raykar

########## Nodes Commands ##########
# kubectl get nodes 
# kubectl get no -o wide 

# kubectl taint nodes node01 appkey=bluevalue:NoSchedule         => Taint node with Values- key=value:effect (NoSchedule|PreferNoSchedule|NoExecute)
# kubectl taint nodes node01 appkey=bluevalue:NoExexute -o yaml  => Pushing node config in yaml so same code can be used in pod yaml for tolerations
# kubectl taint nodes node01 appkey=NoSchedule-                  => Remove taint from node

# kubectl get nodes --show-labels                    => Show all labels of nodes
# kubectl label nodes node01 largekey=largevalue     => Label should be key=value format
# kubectl get nodes -l largekey=largevalue           => Show nodes with key largekey
# kubectl label nodes node01 largekey-               => Delete labels from the nodes

########## Monitoring and Logging Commands ##########

# kubectl top nodes
# kubectl top pods 
# Kubectl top pods --all-namespaces 

# kubectl logs nginx-pod
# kubectl logs nginx-pod -c nginx-container       => Provide -c option when pod contain more than one container
# kubectl logs --since=1h nginx-pod 
# kubectl logs --tail=20 nginx-pod 

########## Pods Commands ##########
# kubectl get pods 
# kubectl get pods -o wide
# kubectl get pods -n mynamespace 
# kubectl get pods --all-namespaces

# kubectl create -f mypod.yaml 
# kubectl describe pod mypod

# kubectl exec -it mypod -- /bin/bash            => Login into container using shell

# kubectl get pod my-pod -o yaml                                    => Get a pod's YAML
# kubectl get pod etcd-master -o yaml -n kube-system                => Generate yaml output of etcd-master pod of kube-system ns

# kubectl run --generator=run-pod/v1 mypod --image=redis                            => Create pod from command line without yaml file
# kubectl run --generator=run-pod/v1 mypod100 --image=nginx --port=2379 --dry-run   => Dry-run of pod creation with specfic spec
# kubectl run --generator=run-pod/v1 mypod200 --image=nginx --namespace=mydev       => Run pod in specific namespace

# kubectl delete pod/mypod                            => Delte pods of mypods 
# kubectl delete pods -l name=my-app                  => Delete pods where label - name=my-app

# kubectl create -f nginx-deploy.yaml --record 		=> Record options records the commands fired as part of rollout procedure
# kubectl edit deploy nginx-deploy 					      => Edit the deployment and make changes 
# kubectl rollout status deploy nginx-deploy 		  => Check the status of deployment. Changes that were performed 
# kubectl rollout pause deploy nginx-deploy 		  => Pause the deployment in between in onging process
# kubectl rollout resume deploy nginx-deploy 		  => Resume the deployment that was paused

# kubectl rollout undo deploy nginx-deploy 			  => Undo the deployment 

########## ReplicaSet Commands ##########
# kubectl get rs 
# kubectl get rs -o wide 
# kubectl create -f myreplica-set.yaml 
# kubectl describe rs myreplica-set

# kubectl scale --replicas=5 rs/myreplica-set          => Scale up Replicas in Deployment 
# kubectl scale --replicas=2 rs/myreplica-set          => Scale down Replicas in Deployment 

# kubectl delete rs/myreplica-set                      => Delte ReplicaSet and the pods associated with ReplicaSet

########## DaemonSets Commands ##########
# kubectl get ds 
# kubectl get ds --all-namespaces
# kubectl get ds -o wide -n kube-system 

# kubectl describe ds kube-proxy -n kube-system       => Describe kube-proxy in ns - kube-system 

########## Deployment Commands ##########
# kubectl get deploy
# kubectl get deploy -o wide
# kubectl get deploy mydeploy -o yaml                  => Get a deployment's YAML output on screen
# kubectl create -f mynginx-deploy.yaml 
# kubectl describe deploy mynginx-deploy 

# kubectl create deploy mydeploy --image=nginx                      => Creating deployment using command line 
# Kubectl create deploy mydeploy --image=nginx --dry-run -o yaml    => Running dry-run of deploy and get yaml output on screen

# kubectl scale --replicas=5 deploy/mynginx-deploy      => Scale up Replicas in Deployment 
# kubectl scale --replicas=2 deploy/mynginx-deploy      => Scale down Replicas in Deployment 

# kubectl delete deploy/mynginx-deploy                  => Delte Deployment and all rs and pods of the deployment 

# kubectl get all                 => Shows all object in the namespace 
# kubectl get events              => Shows all events of Objects 

########## Namespace Commands ##########
# kubectl get namespace 
# kubectl create namespace mydev-ns
# kubectl describe namespace mydev-ns

# kubectl delete namespace mydev

########## Service Commands ##########
# kubectl get svc 
# kubectl get svc -o wide 

# kubectl create -f mysvc.yaml 
# kubectl describe mysvc 
# kubectl expose deploy mydeploy --port=3300 --target-port=3300 --name=mysvc -o yaml    => Creates svc using command line for deploy and get yaml output

########## Configmap Commands ##########
# kubectl get configmap 
# kubectl create configmap nginx-configmap
# kubectl delete configmap nginx-configmap 

